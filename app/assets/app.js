angular.module("app",["ngRoute"]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,o){t.login=function(t,e){o.login(t,e).then(function(t){console.log(t)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,o){o.fetch().success(function(o){t.posts=o}),t.addPost=function(){t.postBody&&o.create({username:"_augustinas",body:t.postBody}).success(function(o){t.posts.unshift(o),t.postBody=null})}}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},o.login=function(e,n){return t.post("/api/sessions",{username:e,password:n}).then(function(t){return o.token=t.data,o.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImxvZ2luLmN0cmwuanMiLCJwb3N0cy5jdHJsLmpzIiwicG9zdHMuc3ZjLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInVzZXIiLCJjb25zb2xlIiwibG9nIiwiUG9zdHNTdmMiLCJmZXRjaCIsInN1Y2Nlc3MiLCJwb3N0cyIsImFkZFBvc3QiLCJwb3N0Qm9keSIsImNyZWF0ZSIsImJvZHkiLCJwb3N0IiwidW5zaGlmdCIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsInN2YyIsImdldFVzZXIiLCJoZWFkZXJzIiwiWC1BdXRoIiwidG9rZW4iLCJ2YWwiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBQUMsT0FBQSxPQUNBLFlDREFELFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBQyxHQUNBRCxFQUFBRSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFDLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQUMsUUFBQUMsSUFBQUYsU0NMQVQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLGFBQUEsU0FBQSxXQUFBLFNBQUFDLEVBQUFTLEdBQ0FBLEVBQUFDLFFBQUFDLFFBQUEsU0FBQUMsR0FDQVosRUFBQVksTUFBQUEsSUFHQVosRUFBQWEsUUFBQSxXQUNBYixFQUFBYyxVQUNBTCxFQUFBTSxRQUNBWixTQUFBLGNBQ0FhLEtBQUFoQixFQUFBYyxXQUNBSCxRQUFBLFNBQUFNLEdBQ0FqQixFQUFBWSxNQUFBTSxRQUFBRCxHQUNBakIsRUFBQWMsU0FBQSxXQ2JBakIsUUFBQUMsT0FBQSxPQUNBcUIsUUFBQSxZQUFBLFFBQUEsU0FBQUMsR0FDQUMsS0FBQVgsTUFBQSxXQUNBLE1BQUFVLEdBQUFFLElBQUEsZUFHQUQsS0FBQU4sT0FBQSxTQUFBRSxHQUNBLE1BQUFHLEdBQUFILEtBQUEsYUFBQUEsT0NQQXBCLFFBQUFDLE9BQUEsT0FDQXlCLFFBQUEsaUJBQUEsU0FBQUMsR0FDQUEsRUFDQUMsS0FBQSxLQUNBMUIsV0FBQSxZQUNBMkIsWUFBQSxlQUVBRCxLQUFBLGFBQ0ExQixXQUFBLGVBQ0EyQixZQUFBLGtCQUVBRCxLQUFBLFVBQ0ExQixXQUFBLFlBQ0EyQixZQUFBLGtCQ2JBN0IsUUFBQUMsT0FBQSxPQUNBcUIsUUFBQSxXQUFBLFFBQUEsU0FBQUMsR0FDQSxHQUFBTyxHQUFBTixJQUVBTSxHQUFBQyxRQUFBLFdBQ0EsTUFBQVIsR0FBQUUsSUFBQSxjQUNBTyxTQUFBQyxTQUFBVCxLQUFBVSxVQUlBSixFQUFBekIsTUFBQSxTQUFBQyxFQUFBQyxHQUNBLE1BQUFnQixHQUFBSCxLQUFBLGlCQUNBZCxTQUFBQSxFQUNBQyxTQUFBQSxJQUNBQyxLQUFBLFNBQUEyQixHQUVBLE1BREFMLEdBQUFJLE1BQUFDLEVBQUFDLEtBQ0FOLEVBQUFDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXG4gICduZ1JvdXRlJ1xuXSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcbiAgICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgfSk7IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gIC5jb250cm9sbGVyKCdQb3N0c0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBQb3N0c1N2Yykge1xuICAgIFBvc3RzU3ZjLmZldGNoKCkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdHMpIHtcbiAgICAgICRzY29wZS5wb3N0cyA9IHBvc3RzO1xuICAgIH0pO1xuXG4gICAgJHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgkc2NvcGUucG9zdEJvZHkpIHtcbiAgICAgICAgUG9zdHNTdmMuY3JlYXRlKHtcbiAgICAgICAgICB1c2VybmFtZTogJ19hdWd1c3RpbmFzJyxcbiAgICAgICAgICBib2R5OiAkc2NvcGUucG9zdEJvZHlcbiAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdCkge1xuICAgICAgICAgICRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpO1xuICAgICAgICAgICRzY29wZS5wb3N0Qm9keSA9IG51bGw7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gIC5zZXJ2aWNlKCdQb3N0c1N2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuICAgIHRoaXMuZmV0Y2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJyk7XG4gICAgfTtcblxuICAgIHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKHBvc3QpIHtcbiAgICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Bvc3RzJywgcG9zdCk7XG4gICAgfTtcbiAgfSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAkcm91dGVQcm92aWRlclxuICAgICAgLndoZW4oJy8nLCB7XG4gICAgICAgIGNvbnRyb2xsZXI6ICdQb3N0c0N0cmwnLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3Bvc3RzLmh0bWwnXG4gICAgICB9KVxuICAgICAgLndoZW4oJy9yZWdpc3RlcicsIHtcbiAgICAgICAgY29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCdcbiAgICAgIH0pXG4gICAgICAud2hlbignL2xvZ2luJywge1xuICAgICAgICBjb250cm9sbGVyOiAnTG9naW5DdHJsJyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICdsb2dpbi5odG1sJ1xuICAgICAgfSk7XG4gIH0pOyIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuICAuc2VydmljZSgnVXNlclN2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuICAgIHZhciBzdmMgPSB0aGlzO1xuXG4gICAgc3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJzJywge1xuICAgICAgICBoZWFkZXJzOiB7ICdYLUF1dGgnOiB0aGlzLnRva2VuIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBzdmMubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcbiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICBwYXNzd29yZDogcGFzc3dvcmRcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICBzdmMudG9rZW4gPSB2YWwuZGF0YTtcbiAgICAgICAgcmV0dXJuIHN2Yy5nZXRVc2VyKCk7XG4gICAgICB9KTtcbiAgICB9O1xuICB9KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=